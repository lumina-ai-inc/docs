{
    "sourceFile": "sdk/data-operations/update.mdx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1738302524461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1738302524461,
            "name": "Commit-0",
            "content": "---\ntitle: Updating Tasks\ndescription: Learn how to update existing tasks in Chunkr AI\n---\n\nChunkr AI allows you to update the configuration of existing tasks. You can update a task either by its ID or using a task object.\n\n## Updating by Task ID\n\nUse the `update()` method with a task ID when you have the ID stored:\n\n<CodeGroup> \n\n```python Python\nfrom chunkr_ai import Chunkr, Configuration\nchunkr = Chunkr()\n\n# Update task with new configuration\nnew_config = Configuration(\n    # your configuration options here\n)\n\n# Update and wait for processing\ntask = chunkr.update(\"task_123\", new_config)\n```\n\n</CodeGroup>\n\n## Updating from TaskResponse Object\n\nIf you have a task object (from a previous `get_task()` or `create_task()`), you can update it directly:\n\n<CodeGroup> \n\n```python Python\n# Get existing task\ntask = chunkr.get_task(\"task_123\")\n\n# Update configuration\nnew_config = Configuration(\n    # your configuration options here\n)\n\n# Update and wait\ntask = task.update(new_config)\n```\n</CodeGroup>\n\n## Immediate vs. Waited Updates\n\nLike task creation, you have two options for updates:\n\n### Wait for Processing\n\nThe standard `update()` method waits for processing to complete:\n\n<CodeGroup> \n\n```python Python\n# Updates and waits for completion\ntask = chunkr.update(\"task_123\", new_config)\nprint(task.status) # Will be \"Succeeded\"\n```\n\n</CodeGroup>\n\n### Immediate Response\n\nUse `update_task()` for an immediate response without waiting:\n\n<CodeGroup> \n\n```python Python\n# Updates and returns immediately\ntask = chunkr.update_task(\"task_123\", new_config)\nprint(task.status) # Might be \"Starting\"\n\n# Get status later\nresult = task.poll()\n```\n\n</CodeGroup>\n\n## Async Usage\n\nFor async applications, use `await` with the update methods:\n\n<CodeGroup> \n\n```python Python\n# Update and wait\ntask = await chunkr.update(\"task_123\", new_config)\n\n# Update without waiting\ntask = await chunkr.update_task(\"task_123\", new_config)\nresult = await task.poll() # Check status later\n```\n</CodeGroup>"
        }
    ]
}